# -*- coding: utf-8 -*-
"""codigo_checkpoint2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i3IaJCtvD4k2gfVfI1bh4-ogK3C5bjjv

# Checkpoint 2

## Carregar módulos
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

"""## Carregar dados"""

path = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
path_dead =  'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv'

dados_paises_covid = pd.read_csv(path)
dados_paises_covid_dead = pd.read_csv(path_dead)

dados_paises_covid

"""## Ajustes

- Nomes das colunas
"""

dados_paises_covid.rename(columns={"Province/State": "province",
                                   "Country/Region": "country"},
                          inplace=True)

dados_paises_covid_dead.rename(columns={"Province/State": "province",
                                        "Country/Region": "country"},
                               inplace=True)

dados_paises_covid_dead.columns

"""- Reajustar dados"""

dados_paises_covid = dados_paises_covid.melt(id_vars=['province', 'country', 'Lat', 'Long'],
                                             var_name = 'date',
                                             value_name = 'infected')

dados_paises_covid_dead = dados_paises_covid_dead.melt(id_vars=['province', 'country', 'Lat', 'Long'],
                                                       var_name = 'date',
                                                       value_name = 'dead')

dados_paises_covid_dead.tail()

dados_paises_covid_dead.dtypes

"""- Ajustar datas"""

dados_paises_covid['date'] = pd.to_datetime(dados_paises_covid['date'],
                                            infer_datetime_format='True')

dados_paises_covid_dead['date'] = pd.to_datetime(dados_paises_covid_dead['date'],
                                                 infer_datetime_format='True')

dados_paises_covid.tail()

dados_paises_covid_dead.tail()

dados_paises_covid_dead.dtypes

"""- Combinar os datasets"""

dados_paises_covid.shape

dados_paises_covid_dead.shape

dados_covid = pd.merge(dados_paises_covid, dados_paises_covid_dead,
                       on = ['province', 'country',	'Lat',	'Long',	'date'],
                       how = 'inner')

dados_covid.tail()

dados_covid.shape

"""## Aqui começa o trabalho

## *Exemplo probabilidades (memórias de cálculo)

- Prob(infectados covid)

total infectados = soma do total de infectados dos 4 países

total_populacao = soma do total de população dos 4 países

P(infectados) = total infectados / total_populacao

- P(infectado covid e ser Brasileiro)

infectado_e_brasil = total de infectados do Brasil

P(infectado covid e ser Brasileiro) = infectado_e_brasil / total_populacao

- P(Infectado covid | ser Brasileiro)

total_brasil_populacao = populacao do Brasil

P(Infectado covid | ser Brasileiro) = (infectado_e_brasil / total_populacao) / (total_brasil_populacao / total_populacao)

ou

P(Infectado covid | ser Brasileiro) = infectado_e_brasil / total_brasil_populacao
"""

from datetime import datetime, timedelta



np.max(dados_covid['date']) - timedelta(days=365)

"""1 – Filtrar a data mais recente (realizar o processo para buscar a última data de forma automatizada) e os países Brasil, França, E.U.A e Canadá."""

data_maxima = np.max(dados_covid['date'])
lista_paises=['Brazil', 'US', 'France', 'Canada']

dados2 = dados_covid.groupby(['country', 'date'])[['infected','dead']].sum().reset_index()

dados2[(dados2['date'] == data_maxima) & \
        (dados2['country'].isin(lista_paises))]

"""2 – Pesquisar populações de Brasil, França, E.U.A. e Canadá. Depois, adicionar estas populações como uma coluna no dataset."""

dados_pop=pd.DataFrame({'country':['Brazil', 'Canada', 'France', 'US'],'Population':[ 214300000, 39500000, 331449000, 379600000]})

merged_df=pd.merge(dados2,dados_pop,on=['country'])

data_maxima2=np.max(merged_df['date'])
dados_population=merged_df.groupby(['country','date'])[['infected','dead','Population']].sum().reset_index()

dados_population[(dados_population['date']==data_maxima) & \
                 (dados_population['country'].isin(lista_paises))]

"""3 - Considerando somente os dados dos países apresentados, encontre as seguintes probabilidades, baseando-se na coluna de infectados:

h) P(infectado covid e ser Canadá)
"""

dados_can = data_population[(dados_can[dados_can['country']== 'Canada'])] & ['infected']

"""i) P(infectado covid | ser Canadá)"""



"""Compare estes resultados com o mesmo período do ano passado.


"""

